{"version":3,"file":"bmo-ng-parent-checkbox.component.d.ts","sources":["bmo-ng-parent-checkbox.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { AfterContentInit, AfterViewInit, ElementRef, OnInit, QueryList } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox.component';\nexport declare class BmoNgParentCheckboxComponent implements AfterContentInit, AfterViewInit, OnInit, ControlValueAccessor {\n    private ngControl;\n    checkboxes: QueryList<BmoNgCheckboxComponent>;\n    inputElement: ElementRef;\n    id: string;\n    label: string;\n    errorMessage: string;\n    name: string;\n    get disabled(): boolean;\n    set disabled(disabled: boolean);\n    private _disabled;\n    checked: boolean;\n    childIds: string;\n    ariaState: 'false' | 'true' | 'mixed';\n    get error(): boolean;\n    onChange: (val: Array<string>) => void;\n    onTouched: () => void;\n    constructor(ngControl: NgControl);\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    ngAfterViewInit(): void;\n    writeValue(obj: any): void;\n    registerOnChange(fn: any): void;\n    registerOnTouched(fn: any): void;\n    setDisabledState?(isDisabled: boolean): void;\n    updateParentCheckbox(): void;\n    toggleParentCheckbox(): void;\n    private setChecked;\n    private setCheckboxes;\n    private updateControlledStates;\n    private anyLastChecked;\n    _onClick: (event: any) => void;\n    onClick(event: MouseEvent): void;\n    onKeyDown(event: KeyboardEvent): void;\n    private randomInterval;\n}\n"]}