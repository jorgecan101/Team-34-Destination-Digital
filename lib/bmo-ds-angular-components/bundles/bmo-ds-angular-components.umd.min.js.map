{"version":3,"sources":["../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-text-field/bmo-ng-text-field.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-accordion/bmo-ng-accordion.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-card-checkbox.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-card-checkbox-wrap.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox-wrap.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-parent-checkbox.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-modal/bmo-ng-modal.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover-header.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover-content.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button-container.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-select/bmo-ng-select.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab-panel.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab-list.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tabs.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-design-system.module.ts"],"names":["BmoNgTextFieldComponent","ngControl","this","id","placeholder","errorMessage","type","readonly","autofocus","mercury","disabled","value","onChange","val","onTouched","valueAccessor","Object","defineProperty","prototype","invalid","dirty","writeValue","obj","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","ngOnInit","ngAfterViewInit","inputElement","nativeElement","focus","Component","args","selector","template","NgControl","decorators","Optional","Self","ViewChild","Input","BmoNgAccordionComponent","bmoAccordionClass","iconRightAttribute","compactAttribute","title","_compact","_iconRight","_expanded","compact","iconRight","expanded","setPanelContainerHeight","toggleAccordion","keydownShouldToggleAccordion","event","key","preventDefault","keyupShouldToggleAccordion","panelContainer","style","height","panelContent","offsetHeight","removeAttribute","HostBinding","create","__values","o","s","Symbol","iterator","m","i","call","length","next","done","TypeError","__read","n","r","e","ar","push","error","__spread","arguments","concat","BmoNgCardCheckboxComponent","elementRef","checkCardClass","label","checked","labelId","random","Math","round","replace","toLowerCase","toggleChecked","firstElementChild","ElementRef","BmoNgCardCheckboxWrapComponent","legend","_disabled","checkboxes","_b","_c","ngAfterContentInit","_this","toArray","checkbox","addEventListener","checkboxValues","ContentChildren","BmoNgCheckboxComponent","isChild","lastState","oldParentElement","parentElement","listElement","document","createElement","appendChild","setLastState","setChecked","Boolean","BmoNgCheckboxWrapComponent","name","randomInterval","_clickListener","stopPropagation","ngOnDestroy","removeEventListener","min","max","floor","BmoNgParentCheckboxComponent","ariaState","_onClick","updateParentCheckbox","childIds","join","reduce","acc","curr","updateControlledStates","toggleParentCheckbox","setCheckboxes","state","anyLastChecked","onClick","onKeyDown","declarations","NgModule","imports","CommonModule","exports","BmoNgModalComponent","isDismissable","focusableElements","modalFocusableElements","escapeCloseModal","closeModal","displayModal","isActive","removeTabIndexes","body","setTimeout","modal","addTabIndexes","querySelectorAll","forEach","element","setAttribute","closeCallback","onBackgroundClick","elementQuery","elements","HostListener","BmoNgPopoverComponent","icon","direction","ngAfterViewChecked","popoverContent","marginTop","clientHeight","displayPopover","closePopover","host","[class.popover-wrapper]","[class.popover-header]","[class.popover-content]","BmoNgPopoverHeaderComponent","BmoNgPopoverContentComponent","BmoNgRadioButtonComponent","BmoNgRadioButtonContainerComponent","radioGroupClass","radioGroupNum","radioButtons","radioButton","String","BmoNgSelectComponent","helperText","onValidatorChange","selectElement","BmoNgTabPanelComponent","tabPanelClass","tabId","roleAttribute","ariaDescribedByAttribute","activeTabContentClass","ariaHiddenAttribute","_tabId","displayTabPanel","active","hideTabPanel","BmoNgTabComponent","tabIndex","ariaSelectedAttribute","tabClass","activeTabLabelClass","navigateTabs","_a","previousElementSibling","nextElementSibling","selectTab","deselectTab","BmoNgTabListComponent","tabsWrapClass","dslTabs","dslPanels","dslTabsArray","dslPanelsArray","tab","tabPanel","_","console","selectedTabIndex","scrollTabsIfNeeded","tabOffsetLeft","offsetLeft","tabOffsetWidth","offsetWidth","tabWrapOffsetWidth","amountForTabsToMove","abs","scrollLeft","BmoNgPopoverModule","BmoNgCheckboxModule","BmoNgRadioButtonModule","BmoNgTabsModule","FormsModule","ReactiveFormsModule","schemas","CUSTOM_ELEMENTS_SCHEMA"],"mappings":"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","sourcesContent":["import { Component, OnInit, Input, Optional, Self, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-text-field',\r\n  templateUrl: './bmo-ng-text-field.component.html',\r\n  styleUrls: ['./bmo-ng-text-field.component.scss']\r\n})\r\nexport class BmoNgTextFieldComponent implements OnInit, AfterViewInit, ControlValueAccessor {\r\n  @ViewChild('inputElement') inputElement: ElementRef;\r\n\r\n  @Input() id = 'text-field-1';\r\n  @Input() placeholder = \"Placeholder\";\r\n  @Input() helperText: string;\r\n  @Input() errorMessage = '';\r\n  @Input() type: 'email' | 'hidden' | 'number' | 'password' | 'text' = 'text';\r\n  @Input() maxLength: number;\r\n\r\n  @Input() readonly = false;\r\n  @Input() autofocus = false;\r\n  @Input() mercury = false;\r\n  @Input() disabled = false;\r\n\r\n  public value = '';\r\n\r\n  get error(): boolean {\r\n    return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n  }\r\n\r\n  onChange = (val: string) => {};\r\n  onTouched = () => {};\r\n\r\n  constructor(@Optional() @Self() private ngControl: NgControl) {\r\n    if (this.ngControl) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n    this.onChange(obj);\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.autofocus) {\r\n      this.inputElement.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-accordion',\r\n  templateUrl: './bmo-ng-accordion.component.html',\r\n  styleUrls: ['./bmo-ng-accordion.component.scss']\r\n})\r\nexport class BmoNgAccordionComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('accordionTrigger') accordionTrigger: ElementRef;\r\n  @ViewChild('accordionPanel') accordionPanel: ElementRef;\r\n  @ViewChild('panelContainer') panelContainer: ElementRef;\r\n  @ViewChild('panelContent') panelContent: ElementRef;\r\n\r\n  @HostBinding('class.bmo-accordion') bmoAccordionClass = true;\r\n  @HostBinding('attr.icon-right') iconRightAttribute = null;\r\n  @HostBinding('attr.compact') compactAttribute = null;\r\n\r\n  @Input() title = '';\r\n  @Input() get compact() {\r\n    return this._compact;\r\n  }\r\n  set compact(compact: boolean) {\r\n    this.compactAttribute = compact;\r\n    this._compact = compact;\r\n\r\n    if (!this.compactAttribute) {\r\n      this.compactAttribute = null;\r\n    }\r\n  }\r\n  _compact = false;\r\n  @Input() get iconRight() {\r\n    return this._iconRight;\r\n  }\r\n  set iconRight(iconRight: boolean) {\r\n    this.iconRightAttribute = iconRight;\r\n    this._iconRight = iconRight;\r\n\r\n    if (!this.iconRightAttribute) {\r\n      this.iconRightAttribute = null;\r\n    }\r\n  }\r\n  _iconRight = false;\r\n  @Input() get expanded() {\r\n    return this._expanded;\r\n  }\r\n  set expanded(expanded: boolean) {\r\n    this._expanded = expanded;\r\n    this.setPanelContainerHeight();\r\n  }\r\n  _expanded = false;\r\n  @Input() id;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (!this.id) {\r\n      this.id = \"accordion\";\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setPanelContainerHeight();\r\n  }\r\n\r\n  toggleAccordion(): void {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  keydownShouldToggleAccordion(event: KeyboardEvent): void {\r\n    if (event.key === ' ' || event.key === 'Spacebar' || event.key === 'Enter') {\r\n      this.toggleAccordion();\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (event.key === 'Down' || event.key === 'ArrowDown') {\r\n      this.expanded = true;\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  keyupShouldToggleAccordion(event: KeyboardEvent): void {\r\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\r\n      this.expanded = false;\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  private setPanelContainerHeight(): void {\r\n    if (this.expanded) {\r\n      this.panelContainer.nativeElement.style.height = this.panelContent.nativeElement.offsetHeight + 'px';\r\n    } else {\r\n      this.panelContainer.nativeElement.removeAttribute('style');\r\n    }\r\n  }\r\n\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { AfterViewInit, Component, ElementRef, HostBinding, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-card-checkbox',\r\n    template:  `\r\n        <div class=\"bmo-card-checkbox check-fixed-cards\">\r\n            <input\r\n                id=\"{{labelId}}\"\r\n                type=\"checkbox\"\r\n                class=\"card-check-input\"\r\n                [value]=\"value\"\r\n                [disabled]=\"disabled\"\r\n                [checked]=\"checked\"\r\n                [attr.aria-checked]=\"checked\"\r\n                (click)=\"toggleChecked()\"\r\n            >\r\n            <label class=\"card-check-label\" for=\"{{labelId}}\">\r\n                <span class=\"check\"></span>\r\n                <span class=\"card-check-image\">\r\n                    <img *ngIf=\"img\" src=\"{{img}}\" role=\"presentation\" />\r\n                </span>\r\n                <span class=\"card-check-label-text\">{{label}}</span>\r\n            </label>\r\n        </div>\r\n    `,\r\n    styles: [':host { display: inline-block; }']\r\n})\r\nexport class BmoNgCardCheckboxComponent implements OnInit {\r\n    @HostBinding('class.check-card') checkCardClass = true;\r\n\r\n    @Input() id: string;\r\n    @Input() label = \"\";\r\n    @Input() img: string;\r\n    @Input() value: string;\r\n\r\n    @Input() disabled = false;\r\n    @Input() checked = false;\r\n\r\n    public labelId: string;\r\n    constructor(public elementRef: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.id) {\r\n            this.labelId = this.id;\r\n        } else {\r\n            const random = Math.round(Math.random() * 10000);\r\n            this.labelId = this.label.replace(/\\s+/g, '-').toLowerCase() + random;\r\n        }\r\n    }\r\n\r\n    toggleChecked() {\r\n        this.checked = !this.checked;\r\n    }\r\n\r\n    get inputElement() {\r\n        return this.elementRef.nativeElement.firstElementChild as HTMLInputElement;\r\n    }\r\n}","import { AfterContentInit, Component, ContentChildren, Input, Optional, QueryList, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BmoNgCardCheckboxComponent } from './bmo-ng-card-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-card-checkbox-wrap',\r\n    template: `\r\n        <div class=\"check-group\">\r\n            <fieldset class=\"input-wrap input-checkbox\">\r\n                <legend class=\"legend check-legend\">{{legend}}</legend>\r\n                <div class=\"card-check-wrap\">\r\n                    <ng-content select=\"bmo-ng-card-checkbox\"></ng-content>\r\n                </div>\r\n                <span class=\"error-message\" [class.has-error]=\"error\" role=\"alert\">{{errorMessage}}</span>\r\n            </fieldset>\r\n        </div>\r\n    `\r\n})\r\nexport class BmoNgCardCheckboxWrapComponent implements AfterContentInit, ControlValueAccessor {\r\n    @ContentChildren(BmoNgCardCheckboxComponent) checkboxes: QueryList<BmoNgCardCheckboxComponent>;\r\n\r\n    @Input() errorMessage = '';\r\n    @Input() legend = '';\r\n    @Input()\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(disabled: boolean) {\r\n        this._disabled = disabled;\r\n\r\n        if (this.checkboxes) {\r\n            for (const checkbox of this.checkboxes) {\r\n                checkbox.disabled = this.disabled;\r\n            }\r\n        }\r\n    }\r\n    private _disabled = false;\r\n\r\n    onChange = (val: Array<string>) => {};\r\n    onTouched = () => {};\r\n\r\n    get error() {\r\n        return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n    }\r\n\r\n    constructor(@Optional() @Self() private ngControl: NgControl) {\r\n        if (ngControl) {\r\n            ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        for (const checkbox of this.checkboxes.toArray()) {\r\n            checkbox.disabled = this.disabled;\r\n            checkbox.inputElement.addEventListener('click', () => this.writeValue(''));\r\n        }\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (!this.checkboxes) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        const checkboxValues = [];\r\n        for (const checkbox of this.checkboxes.toArray()) {\r\n            if (checkbox.checked) {\r\n                checkboxValues.push(checkbox.value);\r\n            }\r\n        }\r\n\r\n        if (checkboxValues.length === 0) {\r\n            this.onChange(null);\r\n        }\r\n\r\n        this.onChange(checkboxValues);\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n\r\n    }\r\n}","import { AfterViewInit, Component, ElementRef, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'bmo-ng-checkbox',\n  template: `\n    <ng-container *ngIf=\"isChild\">\n        <div class=\"input-wrap input-checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"{{name}}\"\n            id=\"{{id}}\"\n            class=\"check\"\n            [value]=\"value\"\n            [checked]=\"checked\"\n            [attr.aria-checked]=\"checked\"\n            [disabled]=\"disabled\"\n            (click)=\"toggleChecked()\"\n            (keyup)=\"setLastState()\"\n          >\n          <label class=\"check-label active-label\" for=\"{{id}}\">{{label}}</label>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!isChild\">\n        <input\n        type=\"checkbox\"\n        name=\"{{name}}\"\n        id=\"{{id}}\"\n        class=\"check\"\n        [value]=\"value\"\n        [checked]=\"checked\"\n        [attr.aria-checked]=\"checked\"\n        [disabled]=\"disabled\"\n        (click)=\"toggleChecked()\"\n        (keyup)=\"setLastState()\"\n      >\n      <label class=\"check-label active-label\" for=\"{{id}}\">{{label}}</label>\n    </ng-container>\n  `\n})\nexport class BmoNgCheckboxComponent implements OnInit, AfterViewInit {\n\n  @Input() id: string;\n  @Input() label: string;\n  @Input() value: string;\n  @Input() name: string;\n\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() isChild = false;\n\n  public lastState = false;\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    if (!this.id) {\n      const random = Math.round(Math.random() * 10000);\n      this.id = this.label.replace(/\\s+/g, '-').toLowerCase() + random;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.isChild) {\n      const oldParentElement = this.nativeElement.parentElement;\n\n      const listElement = document.createElement('li');\n      listElement.appendChild(this.nativeElement);\n\n      oldParentElement.appendChild(listElement);\n    }\n  }\n\n  toggleChecked() {\n    this.checked = !this.checked;\n\n    this.setLastState();\n  }\n\n  setChecked(val: boolean | string) {\n    if (typeof val === 'boolean') {\n      this.checked = val;\n    } else {\n      switch (val) {\n        case 'true':\n        case 'false':\n            this.checked = Boolean(val);\n            break;\n        case 'last':\n          this.checked = this.lastState || false;\n          break;\n        default:\n            break;\n      }\n    }\n  }\n\n  private setLastState() {\n    if (this.isChild) {\n      this.lastState = this.checked;\n    }\n  }\n\n  get nativeElement() {\n    return this.elementRef.nativeElement as HTMLElement;\n  }\n\n  get inputElement() {\n      return this.elementRef.nativeElement.firstElementChild as HTMLInputElement;\n  }\n\n}\n","import { AfterContentInit, AfterViewInit, Component, ContentChildren, Input, OnDestroy, Optional, QueryList, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-checkbox-wrap',\r\n    template: `\r\n        <div class=\"check-group\">\r\n            <fieldset class=\"input-wrap input-checkbox\" [disabled]=\"disabled\">\r\n                <legend class=\"legend check-legend\">{{label}}</legend>\r\n                <ng-content select=\"bmo-ng-checkbox\"></ng-content>\r\n                <span *ngIf=\"error\" class=\"error-message has-error\" role=\"alert\">{{errorMessage}}</span>\r\n            </fieldset>\r\n        </div>\r\n    `\r\n})\r\nexport class BmoNgCheckboxWrapComponent implements OnDestroy, AfterContentInit, AfterViewInit, ControlValueAccessor {\r\n    @ContentChildren(BmoNgCheckboxComponent) checkboxes: QueryList<BmoNgCheckboxComponent>;\r\n\r\n    @Input() label: string;\r\n    @Input() errorMessage: string;\r\n    @Input() name = 'checkbox-group-' + this.randomInterval(0, 1000);\r\n\r\n    // States\r\n    @Input() \r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(disabled: boolean) {\r\n        this._disabled = disabled;\r\n\r\n        if (this.checkboxes) {\r\n            for (const checkbox of this.checkboxes) {\r\n                checkbox.disabled = this.disabled;\r\n            }\r\n        }\r\n    }\r\n    private _disabled = false;\r\n\r\n    onChange = (val: Array<string>) => {};\r\n    onTouched = () => {};\r\n\r\n    get error(): boolean {\r\n        return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n    }\r\n\r\n    constructor(@Optional() @Self() private ngControl: NgControl) {\r\n        if (ngControl) {\r\n            ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit(): void {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.name = this.name;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.inputElement.addEventListener('click', this._clickListener);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.inputElement.removeEventListener('click', this._clickListener);\r\n        }\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (!this.checkboxes) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        const checkboxValues = [];\r\n        for (const checkbox of this.checkboxes) {\r\n            if (checkbox.checked) {\r\n                checkboxValues.push(checkbox.value);\r\n            }\r\n        }\r\n\r\n        if (checkboxValues.length === 0) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        return this.onChange(checkboxValues);\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    private _clickListener = (event) => {\r\n        this.writeValue('');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private randomInterval(min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}","import { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, HostListener, Input, OnInit, Optional, QueryList, Self, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-parent-checkbox',\r\n    template: `\r\n        <div class=\"input-wrap input-checkbox parent-checkbox\">\r\n            <input #inputElement\r\n                type=\"checkbox\"\r\n                name=\"{{name}}\"\r\n                id=\"{{id}}\"\r\n                [checked]=\"checked\"\r\n                [disabled]=\"disabled\"\r\n                [attr.aria-checked]=\"ariaState\"\r\n                [attr.aria-controls]=\"childIds\"\r\n                (click)=\"onClick($event)\"\r\n                (keydown)=\"onKeyDown($event)\"\r\n            >\r\n            <label for=\"{{id}}\">{{label}}</label>\r\n        </div>\r\n        <ul class=\"checkboxes\">\r\n            <ng-content select=\"bmo-ng-checkbox\"></ng-content>\r\n        </ul>\r\n    `\r\n})\r\nexport class BmoNgParentCheckboxComponent implements AfterContentInit, AfterViewInit, OnInit, ControlValueAccessor {\r\n    @ContentChildren(BmoNgCheckboxComponent) checkboxes: QueryList<BmoNgCheckboxComponent>;\r\n    @ViewChild('inputElement') inputElement: ElementRef;\r\n\r\n    @Input() id: string;\r\n    @Input() label: string;\r\n    @Input() errorMessage: string;\r\n    @Input() name = 'parent-checkbox-group-' + this.randomInterval(0, 1000);\r\n\r\n    // States\r\n    @Input() get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(disabled: boolean) {\r\n        this._disabled = disabled;\r\n\r\n        if (this.checkboxes) {\r\n            for (const checkbox of this.checkboxes) {\r\n                checkbox.disabled = disabled;\r\n            }\r\n        }\r\n    }\r\n    private _disabled = false;\r\n    @Input() checked = false;\r\n\r\n    public childIds: string;\r\n    public ariaState: 'false' | 'true' | 'mixed' = 'false';\r\n\r\n    get error(): boolean {\r\n        return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n    }\r\n\r\n    onChange = (val: Array<string>) => {};\r\n    onTouched = () => {};\r\n\r\n    constructor(@Optional() @Self() private ngControl: NgControl) {\r\n        if (ngControl) {\r\n            ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.id) {\r\n            this.id = this.name;\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        const childIds = [];\r\n\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.isChild = true;\r\n            checkbox.disabled = this.disabled;\r\n            checkbox.name = this.name;\r\n            childIds.push(checkbox.id);\r\n        }\r\n\r\n        this.childIds = childIds.join(' ');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.disabled = this.disabled;\r\n\r\n            checkbox.inputElement.removeEventListener('click', this._onClick);\r\n            checkbox.inputElement.addEventListener('click', this._onClick);\r\n        }\r\n\r\n        this.updateParentCheckbox();\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (!this.checkboxes) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        const checkboxValues = [];\r\n        for (const checkbox of this.checkboxes) {\r\n            if (checkbox.checked) {\r\n                checkboxValues.push(checkbox.value);\r\n            }\r\n        }\r\n\r\n        if (checkboxValues.length === 0) {\r\n            this.onChange(null);\r\n        }\r\n\r\n        this.onChange(checkboxValues);\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public updateParentCheckbox() {\r\n        const count = this.checkboxes.reduce((acc, curr) => curr.checked ? acc + 1 : acc, 0);\r\n\r\n        switch (count) {\r\n            case 0:\r\n                this.setChecked('false');\r\n                break;\r\n            case this.checkboxes.length:\r\n                this.setChecked('true');\r\n                break;\r\n            default:\r\n                this.setChecked('mixed');\r\n                this.updateControlledStates();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public toggleParentCheckbox() {\r\n        switch (this.ariaState) {\r\n            case 'false':\r\n            case 'mixed':\r\n                this.setCheckboxes(true);\r\n                break;\r\n            case 'true':\r\n                this.setCheckboxes(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private setChecked(state: 'false' | 'true' | 'mixed') {\r\n        this.ariaState = state;\r\n        this.inputElement.nativeElement.checked = this.checked = state === 'false' ? false : true;\r\n    }\r\n\r\n    private setCheckboxes(val: boolean) {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.setChecked(val);\r\n        }\r\n        this.updateParentCheckbox();\r\n    }\r\n\r\n    private updateControlledStates() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.lastState = checkbox.checked;\r\n        }\r\n    }\r\n\r\n    private anyLastChecked() {\r\n        const count = this.checkboxes.reduce((acc, curr) => curr.lastState ? acc + 1 : acc, 0);\r\n        return count > 0;\r\n    }\r\n\r\n    _onClick = (event) => {\r\n        this.updateParentCheckbox();\r\n        this.writeValue('');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onClick(event: MouseEvent) {\r\n        this.toggleParentCheckbox();\r\n        this.writeValue('');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (event.key === 'Space') {\r\n            this.toggleParentCheckbox();\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    private randomInterval(min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BmoNgCardCheckboxComponent } from './bmo-ng-card-checkbox.component';\r\nimport { BmoNgCardCheckboxWrapComponent } from './bmo-ng-card-checkbox-wrap.component';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox.component';\r\nimport { BmoNgCheckboxWrapComponent } from './bmo-ng-checkbox-wrap.component';\r\nimport { BmoNgParentCheckboxComponent } from './bmo-ng-parent-checkbox.component';\r\n\r\nconst declarations = [\r\n    BmoNgCheckboxComponent,\r\n    BmoNgCardCheckboxComponent,\r\n    BmoNgCheckboxWrapComponent,\r\n    BmoNgParentCheckboxComponent,\r\n    BmoNgCardCheckboxWrapComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgCheckboxModule {}","import { Component, OnInit, Input, ViewChild, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-modal',\r\n  templateUrl: './bmo-ng-modal.component.html',\r\n  styleUrls: ['./bmo-ng-modal.component.scss']\r\n})\r\nexport class BmoNgModalComponent implements OnInit {\r\n  @Input() id = '';\r\n  @Input() title = '';\r\n  @Input() isDismissable = true;\r\n  @ViewChild('modal') modal: ElementRef;\r\n\r\n  private focusableElements: string;\r\n  private modalFocusableElements: string;\r\n\r\n  public isActive: boolean;\r\n  public closeCallback: Function;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.focusableElements = 'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled]), label, li[role=\"tab\"]:not([disabled]), div[role=\"tabpanel\"]:not([disabled])';\r\n    this.modalFocusableElements = '.modal a[href]:not([disabled]), .modal button:not([disabled]), .modal textarea:not([disabled]), .modal input[type=\"text\"]:not([disabled]), .modal input[type=\"radio\"]:not([disabled]), .modal input[type=\"checkbox\"]:not([disabled]), .modal select:not([disabled]), .modal label, .modal li[role=\"tab\"]:not([disabled]), .modal div[role=\"tabpanel\"]:not([disabled])';\r\n  }\r\n\r\n  /**\r\n   * Close modal if the Escape key was pressed\r\n   *\r\n   * @param event Keyboard event that called this function\r\n   */\r\n  @HostListener('keyup', ['$event'])\r\n  private escapeCloseModal(event: KeyboardEvent) {\r\n\r\n    if (this.isDismissable && (event.key === 'Esc' || event.key === 'Escape')) {\r\n      this.closeModal();\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Displays the modal\r\n   */\r\n  displayModal() {\r\n    this.isActive = true;\r\n    this.removeTabIndexes(document.body, this.focusableElements);\r\n\r\n    setTimeout(() => {\r\n      this.modal.nativeElement.focus();\r\n      this.addTabIndexes(this.modal.nativeElement, this.modalFocusableElements);\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Closes the modal\r\n   */\r\n  closeModal() {\r\n    this.isActive = false;\r\n    this.addTabIndexes(document.body, this.focusableElements);\r\n    document.querySelectorAll('.bmo-switch').forEach((element) => element.setAttribute('tabindex', '0'));\r\n\r\n    if (this.closeCallback) {\r\n      this.closeCallback();\r\n    }\r\n  }\r\n\r\n  onBackgroundClick() {\r\n    if(!this.isDismissable)\r\n      return;\r\n\r\n    this.closeModal();\r\n  }\r\n\r\n  /**\r\n   * Sets all the tab indexes for the found elements to -1\r\n   *\r\n   * @param element Element that we will query from\r\n   */\r\n  private removeTabIndexes(element: HTMLElement, elementQuery: string) {\r\n    const elements = element.querySelectorAll(elementQuery);\r\n\r\n    if (!elements) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach((e: HTMLElement) => {\r\n      e.setAttribute('tabindex', '-1');\r\n    });\r\n  }\r\n\r\n  private addTabIndexes(element: HTMLElement, elementQuery: string) {\r\n    const elements = element.querySelectorAll(elementQuery);\r\n\r\n    if (!elements) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach((e: HTMLElement) => {\r\n      e.removeAttribute('tabindex');\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, AfterViewChecked } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-popover',\r\n  templateUrl: './bmo-ng-popover.component.html',\r\n  host: { '[class.popover-wrapper]': 'true'},\r\n  styleUrls: ['./bmo-ng-popover.component.scss']\r\n})\r\nexport class BmoNgPopoverComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n  @Input() icon = 'enclosed-help';\r\n  @Input() direction: 'top'|'left'|'right'|'bottom' = 'top';\r\n  @Input() title = '';\r\n  @Input() containerStyle;\r\n  @Input() buttonStyle;\r\n\r\n  @ViewChild('popoverButton') popoverButton: ElementRef;\r\n  @ViewChild('popoverContent') popoverContent: ElementRef;\r\n\r\n  public isActive: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // Fixes BMO Design System bug where margin for top popover isn't dynamic with the popover height\r\n    if (this.direction === 'top' && this.popoverContent) {\r\n      this.popoverContent.nativeElement.style.marginTop = -(this.popoverContent.nativeElement.clientHeight + 30) + 'px';\r\n    }\r\n  }\r\n\r\n  displayPopover() {\r\n    this.isActive = true;\r\n\r\n    setTimeout(() => {\r\n      this.popoverContent.nativeElement.focus();\r\n    }, 200);\r\n  }\r\n\r\n  closePopover() {\r\n    this.isActive = false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-popover-header',\r\n    template: '<ng-content></ng-content>',\r\n    host: {'[class.popover-header]': 'true'}\r\n})\r\nexport class BmoNgPopoverHeaderComponent {}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-popover-content',\r\n    template: '<ng-content></ng-content>',\r\n    host: {'[class.popover-content]': 'true'}\r\n})\r\nexport class BmoNgPopoverContentComponent {}\r\n","import { BmoNgPopoverComponent } from \"./bmo-ng-popover.component\";\r\nimport { BmoNgPopoverHeaderComponent } from './bmo-ng-popover-header.component';\r\nimport { BmoNgPopoverContentComponent } from './bmo-ng-popover-content.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst declarations = [\r\n    BmoNgPopoverComponent,\r\n    BmoNgPopoverHeaderComponent,\r\n    BmoNgPopoverContentComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgPopoverModule {}\r\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-radio-button',\r\n    template: `\r\n        <input type=\"radio\" [class.radio]=\"type === 'traditional'\" [class.box-radio]=\"type === 'box'\" name=\"{{name}}\" id=\"{{id}}\" value=\"{{value}}\" >\r\n        <label [class.radio-label]=\"type !== 'box'\" [class.box-radio-label]=\"type === 'box'\" for=\"{{id}}\">{{label}}</label>\r\n    `\r\n})\r\nexport class BmoNgRadioButtonComponent {\r\n    @Input() id: string;\r\n    @Input() value: string;\r\n    @Input() name: string;\r\n    @Input() type: 'traditional' | 'box' = 'traditional';\r\n    @Input() label = '';\r\n\r\n    // States\r\n    @Input() disabled = false;\r\n\r\n    constructor(private elementRef: ElementRef) {}\r\n\r\n    get inputElement(): HTMLInputElement {\r\n        return this.elementRef.nativeElement.firstElementChild as HTMLInputElement;\r\n    }\r\n}","import { AfterContentInit, Component, ContentChildren, HostBinding, Input, OnDestroy, OnInit, Optional, QueryList, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BmoNgRadioButtonComponent } from './bmo-ng-radio-button.component';\n\n@Component({\n  selector: 'bmo-ng-radio-button-wrap',\n  templateUrl: './bmo-ng-radio-button-container.component.html',\n  styleUrls: ['./bmo-ng-radio-button-container.component.scss']\n})\nexport class BmoNgRadioButtonContainerComponent implements OnInit, OnDestroy, AfterContentInit, ControlValueAccessor {\n  @HostBinding('class.radio-group') radioGroupClass = true;\n  @ContentChildren(BmoNgRadioButtonComponent) radioButtons: QueryList<BmoNgRadioButtonComponent>;\n\n  private radioGroupNum = this.randomInterval(0, 1000);\n\n  @Input() legend: string;\n  @Input() type: 'traditional' | 'box' = 'traditional';\n  @Input() name = 'radio-group-' + this.radioGroupNum;\n  @Input() errorMessage: string;\n\n  // States\n  @Input() disabled = false;\n\n  get error(): boolean {\n    return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\n  }\n\n  onChange = (val: string) => {};\n  onTouched = () => {};\n\n  constructor(@Optional() @Self() private ngControl: NgControl) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterContentInit(): void {\n    const radioButtons = this.radioButtons.toArray();\n\n    for (let i = 0; i < radioButtons.length; i++) {\n      const radioButton = radioButtons[i];\n      radioButton.name = this.name;\n      radioButton.type = this.type;\n      radioButton.disabled = this.disabled;\n\n      if (!radioButton.id) {\n        radioButton.id = 'radio-' + this.radioGroupNum + '-' + (i + 1);\n      }\n\n      if (!radioButton.value) {\n        radioButton.value = String(i);\n      }\n\n      radioButton.inputElement.addEventListener('click', this._clickListener);\n    }\n  }\n\n  ngOnDestroy() {\n    for (const radioButton of this.radioButtons) {\n      radioButton.inputElement.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  writeValue(obj: any): void {\n    if (!this.radioButtons) {\n      this.onChange(obj);\n      return;\n    }\n\n    for (const radioButton of this.radioButtons.toArray()) {\n      if (radioButton.inputElement.checked) {\n        this.onChange(radioButton.value);\n        return;\n      }\n    }\n\n    this.onChange(obj);\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _clickListener = (event) => {\n    this.writeValue('');\n    event.stopPropagation();\n  }\n  private randomInterval(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BmoNgRadioButtonComponent } from './bmo-ng-radio-button.component';\r\nimport { BmoNgRadioButtonContainerComponent } from './bmo-ng-radio-button-container.component';\r\n\r\nconst declarations = [\r\n    BmoNgRadioButtonComponent,\r\n    BmoNgRadioButtonContainerComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgRadioButtonModule {}","import { AfterViewInit, Component, ElementRef, forwardRef, Input, OnInit, Optional, Self, ViewChild } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, NgControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\n\n@Component({\n  selector: 'bmo-ng-select',\n  templateUrl: './bmo-ng-select.component.html',\n  styleUrls: ['./bmo-ng-select.component.scss']\n})\nexport class BmoNgSelectComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n  @ViewChild('selectElement') selectElement: ElementRef;\n\n  @Input() label = '';\n  @Input() helperText = '';\n  @Input() errorMessage = '';\n  @Input() autofocus = false;\n\n  // States\n  @Input() disabled = false;\n  @Input() readonly = false;\n  @Input() mercury = false;\n\n  public labelId: string;\n  public value: string;\n\n  onChange = (val: string) => {};\n  onTouched = () => {};\n  onValidatorChange = () => {};\n\n  get error(): boolean {\n    return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\n  }\n\n  constructor(@Optional() @Self() private ngControl: NgControl) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.labelId = this.label.replace(/\\s+/g, '-').toLowerCase();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.autofocus) {\n      this.selectElement.nativeElement.focus();\n    }\n  }\n\n  writeValue(val: string): void {\n    this.value = val;\n    this.onChange(val);\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-tab-panel',\r\n    template: `\r\n        <div class=\"panel-content\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `\r\n})\r\nexport class BmoNgTabPanelComponent {\r\n    @Input() set active(val: boolean) {\r\n        this.ariaHiddenAttribute = !val;\r\n        this.activeTabContentClass = val;\r\n    }\r\n\r\n    @HostBinding('class.tab-panel') tabPanelClass = true;\r\n    @HostBinding('attr.id') id = 'tab-' + this.tabId;\r\n    @HostBinding('attr.role') roleAttribute = 'tabpanel';\r\n    @HostBinding('attr.aria-describedby') ariaDescribedByAttribute = 'tab-' + this.tabId;\r\n    @HostBinding('class.active-tab-content') activeTabContentClass = false;\r\n    @HostBinding('attr.aria-hidden') ariaHiddenAttribute = true;\r\n\r\n    get tabId(): number {\r\n        return this._tabId;\r\n    }\r\n    set tabId(val: number) {\r\n        this.id = 'tab-' + val + '-panel';\r\n        this.ariaDescribedByAttribute = 'tab-' + val;\r\n        this._tabId = val;\r\n    }\r\n    private _tabId: number;\r\n\r\n    displayTabPanel(): void {\r\n        this.active = true;\r\n    }\r\n\r\n    hideTabPanel(): void {\r\n        this.active = false;\r\n    }\r\n}","import { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-tab',\r\n    template: `\r\n        {{label}}\r\n        <span class=\"tab-indicator\"></span>\r\n    `\r\n})\r\nexport class BmoNgTabComponent {\r\n    @Input() label = \"\";\r\n    @Input() set active(val: boolean) {\r\n        this.tabIndex = val ? 0 : -1;\r\n        this.activeTabLabelClass = this.ariaSelectedAttribute = val;\r\n    }\r\n\r\n    @HostBinding('attr.id') id = 'tab-' + this.tabId;\r\n    @HostBinding('attr.role') roleAttribute = 'tab';\r\n    @HostBinding('attr.tabindex') tabIndex = -1;\r\n    @HostBinding('attr.aria-selected') ariaSelectedAttribute = false;\r\n    @HostBinding('class.tab') tabClass = true;\r\n    @HostBinding('class.active-tab-label') activeTabLabelClass = false;\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    private navigateTabs(event: KeyboardEvent) {\r\n        switch (event.key) {\r\n            case 'Left':\r\n            case 'ArrowLeft':\r\n                this.elementRef.nativeElement.previousElementSibling?.focus();\r\n                break;\r\n            case 'Right':\r\n            case 'ArrowRight':\r\n                this.elementRef.nativeElement.nextElementSibling?.focus();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    get tabId(): number {\r\n        return this._tabId;\r\n    }\r\n    set tabId(val: number) {\r\n        this.id = 'tab-' + val;\r\n        this._tabId = val;\r\n    }\r\n    private _tabId: number;\r\n\r\n    constructor(public elementRef: ElementRef) {\r\n        this.tabId = 0;\r\n    }\r\n\r\n    selectTab(): void {\r\n        this.active = true;\r\n    }\r\n\r\n    deselectTab(): void {\r\n        this.active = false;\r\n    }\r\n}","import { AfterContentInit, Component, ContentChildren, ElementRef, HostBinding, QueryList } from '@angular/core';\r\nimport { BmoNgTabPanelComponent } from './bmo-ng-tab-panel.component';\r\nimport { BmoNgTabComponent } from './bmo-ng-tab.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-tab-list',\r\n    template: `\r\n        <ul class=\"tab-list\" role=\"tablist\" aria-label=\"Use right and left arrows to navigate between tabs\">\r\n            <ng-content select=\"bmo-ng-tab\"></ng-content>\r\n            <span class=\"tablist-guideline\" aria-hidden=\"true\"></span>\r\n        </ul>\r\n        <ng-content select=\"bmo-ng-tab-panel\"></ng-content>\r\n    `\r\n})\r\nexport class BmoNgTabListComponent implements AfterContentInit {\r\n    @HostBinding('class.bmo-tabs-wrap') tabsWrapClass = true;\r\n\r\n    @ContentChildren(BmoNgTabComponent) dslTabs: QueryList<BmoNgTabComponent>;\r\n    @ContentChildren(BmoNgTabPanelComponent) dslPanels: QueryList<BmoNgTabPanelComponent>;\r\n\r\n    private selectedTabIndex: number;\r\n\r\n    constructor(private elementRef: ElementRef) {}\r\n\r\n    ngAfterContentInit() {\r\n        if (this.dslTabs.length !== this.dslPanels.length) {\r\n            console.error('ERROR: Tab element count does not equal tab panel count. Aborting.');\r\n            return;\r\n        }\r\n\r\n        const dslTabsArray = this.dslTabs.toArray();\r\n        const dslPanelsArray = this.dslPanels.toArray();\r\n\r\n        for (let i = 0; i < this.dslTabs.length; i++) {\r\n            const tab = dslTabsArray[i];\r\n            const tabPanel = dslPanelsArray[i];\r\n            tab.tabId = tabPanel.tabId = i;\r\n\r\n            tab.elementRef.nativeElement.addEventListener('click', _ => this.selectTab(i));\r\n            tab.elementRef.nativeElement.addEventListener('keyup', (event) => {\r\n                if (event.key === 'Down' || event.key === 'ArrowDown' || event.key === 'Enter') {\r\n                    this.selectTab(i);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    selectTab(tabId: number) {\r\n        if (this.selectedTabIndex === tabId) {\r\n            return;\r\n        }\r\n\r\n        const dslTabsArray = this.dslTabs.toArray();\r\n        const dslPanelsArray = this.dslPanels.toArray();\r\n\r\n        for (let i = 0; i < this.dslTabs.length; i++) {\r\n            const tab = dslTabsArray[i];\r\n            const tabPanel = dslPanelsArray[i];\r\n\r\n            if (tab.tabId === tabId) {\r\n                tab.selectTab();\r\n                tabPanel.displayTabPanel();\r\n            } else {\r\n                tab.deselectTab();\r\n                tabPanel.hideTabPanel();\r\n            }\r\n        }\r\n\r\n        this.selectedTabIndex = tabId;\r\n\r\n        this.scrollTabsIfNeeded(tabId);\r\n    }\r\n\r\n    private scrollTabsIfNeeded(tabId: number) {\r\n        const tab = this.dslTabs.toArray()[tabId];\r\n\r\n        const tabOffsetLeft = tab.elementRef.nativeElement.offsetLeft;\r\n        const tabOffsetWidth = tab.elementRef.nativeElement.offsetWidth;\r\n        const tabWrapOffsetWidth = this.elementRef.nativeElement.offsetWidth;\r\n        const amountForTabsToMove = tabOffsetLeft - Math.abs(tabWrapOffsetWidth - tabOffsetWidth) / 2;\r\n\r\n        this.elementRef.nativeElement.scrollLeft = amountForTabsToMove;\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BmoNgTabListComponent } from './bmo-ng-tab-list.component';\r\nimport { BmoNgTabPanelComponent } from './bmo-ng-tab-panel.component';\r\nimport { BmoNgTabComponent } from './bmo-ng-tab.component';\r\n\r\nconst declarations = [\r\n    BmoNgTabListComponent,\r\n    BmoNgTabPanelComponent,\r\n    BmoNgTabComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgTabsModule {}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BmoNgRadioButtonModule } from './bmo-ng-radio-button/bmo-ng-radio-button.module';\r\nimport { BmoNgAccordionComponent } from './bmo-ng-accordion/bmo-ng-accordion.component';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox/bmo-ng-checkbox.component';\r\nimport { BmoNgCheckboxModule } from './bmo-ng-checkbox/bmo-ng-checkbox.module';\r\nimport { BmoNgModalComponent } from './bmo-ng-modal/bmo-ng-modal.component';\r\nimport { BmoNgPopoverModule } from './bmo-ng-popover/bmo-ng-popover.module';\r\nimport { BmoNgSelectComponent } from './bmo-ng-select/bmo-ng-select.component';\r\nimport { BmoNgTabsModule } from './bmo-ng-tabs/bmo-ng-tabs.module';\r\nimport { BmoNgTextFieldComponent } from './bmo-ng-text-field/bmo-ng-text-field.component';\r\n\r\n@NgModule({\r\n  declarations: [BmoNgModalComponent, BmoNgAccordionComponent, BmoNgTextFieldComponent, BmoNgSelectComponent],\r\n  exports: [\r\n    BmoNgModalComponent,\r\n    BmoNgTextFieldComponent,\r\n    BmoNgPopoverModule,\r\n    BmoNgAccordionComponent,\r\n    BmoNgSelectComponent,\r\n    BmoNgCheckboxModule,\r\n    BmoNgRadioButtonModule,\r\n    BmoNgTabsModule\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BmoNgPopoverModule,\r\n    BmoNgCheckboxModule,\r\n    BmoNgTabsModule,\r\n    BmoNgRadioButtonModule\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ]\r\n})\r\nexport class BmoDesignSystemModule { }\r\n"]}