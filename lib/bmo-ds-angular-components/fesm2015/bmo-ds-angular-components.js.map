{"version":3,"file":"bmo-ds-angular-components.js","sources":["../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-text-field/bmo-ng-text-field.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-accordion/bmo-ng-accordion.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-card-checkbox.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-card-checkbox-wrap.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox-wrap.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-parent-checkbox.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-modal/bmo-ng-modal.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover-header.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover-content.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button-container.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-select/bmo-ng-select.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab-panel.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab-list.component.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tabs.module.ts","../../../projects/bmo-ds-angular-components/src/lib/bmo-design-system/bmo-design-system.module.ts","../../../projects/bmo-ds-angular-components/src/public-api.ts","../../../projects/bmo-ds-angular-components/src/bmo-ds-angular-components.ts"],"sourcesContent":["import { Component, OnInit, Input, Optional, Self, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-text-field',\r\n  templateUrl: './bmo-ng-text-field.component.html',\r\n  styleUrls: ['./bmo-ng-text-field.component.scss']\r\n})\r\nexport class BmoNgTextFieldComponent implements OnInit, AfterViewInit, ControlValueAccessor {\r\n  @ViewChild('inputElement') inputElement: ElementRef;\r\n\r\n  @Input() id = 'text-field-1';\r\n  @Input() placeholder = \"Placeholder\";\r\n  @Input() helperText: string;\r\n  @Input() errorMessage = '';\r\n  @Input() type: 'email' | 'hidden' | 'number' | 'password' | 'text' = 'text';\r\n  @Input() maxLength: number;\r\n\r\n  @Input() readonly = false;\r\n  @Input() autofocus = false;\r\n  @Input() mercury = false;\r\n  @Input() disabled = false;\r\n\r\n  public value = '';\r\n\r\n  get error(): boolean {\r\n    return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n  }\r\n\r\n  onChange = (val: string) => {};\r\n  onTouched = () => {};\r\n\r\n  constructor(@Optional() @Self() private ngControl: NgControl) {\r\n    if (this.ngControl) {\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n    this.onChange(obj);\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.autofocus) {\r\n      this.inputElement.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-accordion',\r\n  templateUrl: './bmo-ng-accordion.component.html',\r\n  styleUrls: ['./bmo-ng-accordion.component.scss']\r\n})\r\nexport class BmoNgAccordionComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('accordionTrigger') accordionTrigger: ElementRef;\r\n  @ViewChild('accordionPanel') accordionPanel: ElementRef;\r\n  @ViewChild('panelContainer') panelContainer: ElementRef;\r\n  @ViewChild('panelContent') panelContent: ElementRef;\r\n\r\n  @HostBinding('class.bmo-accordion') bmoAccordionClass = true;\r\n  @HostBinding('attr.icon-right') iconRightAttribute = null;\r\n  @HostBinding('attr.compact') compactAttribute = null;\r\n\r\n  @Input() title = '';\r\n  @Input() get compact() {\r\n    return this._compact;\r\n  }\r\n  set compact(compact: boolean) {\r\n    this.compactAttribute = compact;\r\n    this._compact = compact;\r\n\r\n    if (!this.compactAttribute) {\r\n      this.compactAttribute = null;\r\n    }\r\n  }\r\n  _compact = false;\r\n  @Input() get iconRight() {\r\n    return this._iconRight;\r\n  }\r\n  set iconRight(iconRight: boolean) {\r\n    this.iconRightAttribute = iconRight;\r\n    this._iconRight = iconRight;\r\n\r\n    if (!this.iconRightAttribute) {\r\n      this.iconRightAttribute = null;\r\n    }\r\n  }\r\n  _iconRight = false;\r\n  @Input() get expanded() {\r\n    return this._expanded;\r\n  }\r\n  set expanded(expanded: boolean) {\r\n    this._expanded = expanded;\r\n    this.setPanelContainerHeight();\r\n  }\r\n  _expanded = false;\r\n  @Input() id;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (!this.id) {\r\n      this.id = \"accordion\";\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setPanelContainerHeight();\r\n  }\r\n\r\n  toggleAccordion(): void {\r\n    this.expanded = !this.expanded;\r\n  }\r\n\r\n  keydownShouldToggleAccordion(event: KeyboardEvent): void {\r\n    if (event.key === ' ' || event.key === 'Spacebar' || event.key === 'Enter') {\r\n      this.toggleAccordion();\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (event.key === 'Down' || event.key === 'ArrowDown') {\r\n      this.expanded = true;\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  keyupShouldToggleAccordion(event: KeyboardEvent): void {\r\n    if (event.key === 'Up' || event.key === 'ArrowUp') {\r\n      this.expanded = false;\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  private setPanelContainerHeight(): void {\r\n    if (this.expanded) {\r\n      this.panelContainer.nativeElement.style.height = this.panelContent.nativeElement.offsetHeight + 'px';\r\n    } else {\r\n      this.panelContainer.nativeElement.removeAttribute('style');\r\n    }\r\n  }\r\n\r\n}\r\n","import { AfterViewInit, Component, ElementRef, HostBinding, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-card-checkbox',\r\n    template:  `\r\n        <div class=\"bmo-card-checkbox check-fixed-cards\">\r\n            <input\r\n                id=\"{{labelId}}\"\r\n                type=\"checkbox\"\r\n                class=\"card-check-input\"\r\n                [value]=\"value\"\r\n                [disabled]=\"disabled\"\r\n                [checked]=\"checked\"\r\n                [attr.aria-checked]=\"checked\"\r\n                (click)=\"toggleChecked()\"\r\n            >\r\n            <label class=\"card-check-label\" for=\"{{labelId}}\">\r\n                <span class=\"check\"></span>\r\n                <span class=\"card-check-image\">\r\n                    <img *ngIf=\"img\" src=\"{{img}}\" role=\"presentation\" />\r\n                </span>\r\n                <span class=\"card-check-label-text\">{{label}}</span>\r\n            </label>\r\n        </div>\r\n    `,\r\n    styles: [':host { display: inline-block; }']\r\n})\r\nexport class BmoNgCardCheckboxComponent implements OnInit {\r\n    @HostBinding('class.check-card') checkCardClass = true;\r\n\r\n    @Input() id: string;\r\n    @Input() label = \"\";\r\n    @Input() img: string;\r\n    @Input() value: string;\r\n\r\n    @Input() disabled = false;\r\n    @Input() checked = false;\r\n\r\n    public labelId: string;\r\n    constructor(public elementRef: ElementRef) {}\r\n\r\n    ngOnInit() {\r\n        if (this.id) {\r\n            this.labelId = this.id;\r\n        } else {\r\n            const random = Math.round(Math.random() * 10000);\r\n            this.labelId = this.label.replace(/\\s+/g, '-').toLowerCase() + random;\r\n        }\r\n    }\r\n\r\n    toggleChecked() {\r\n        this.checked = !this.checked;\r\n    }\r\n\r\n    get inputElement() {\r\n        return this.elementRef.nativeElement.firstElementChild as HTMLInputElement;\r\n    }\r\n}","import { AfterContentInit, Component, ContentChildren, Input, Optional, QueryList, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BmoNgCardCheckboxComponent } from './bmo-ng-card-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-card-checkbox-wrap',\r\n    template: `\r\n        <div class=\"check-group\">\r\n            <fieldset class=\"input-wrap input-checkbox\">\r\n                <legend class=\"legend check-legend\">{{legend}}</legend>\r\n                <div class=\"card-check-wrap\">\r\n                    <ng-content select=\"bmo-ng-card-checkbox\"></ng-content>\r\n                </div>\r\n                <span class=\"error-message\" [class.has-error]=\"error\" role=\"alert\">{{errorMessage}}</span>\r\n            </fieldset>\r\n        </div>\r\n    `\r\n})\r\nexport class BmoNgCardCheckboxWrapComponent implements AfterContentInit, ControlValueAccessor {\r\n    @ContentChildren(BmoNgCardCheckboxComponent) checkboxes: QueryList<BmoNgCardCheckboxComponent>;\r\n\r\n    @Input() errorMessage = '';\r\n    @Input() legend = '';\r\n    @Input()\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(disabled: boolean) {\r\n        this._disabled = disabled;\r\n\r\n        if (this.checkboxes) {\r\n            for (const checkbox of this.checkboxes) {\r\n                checkbox.disabled = this.disabled;\r\n            }\r\n        }\r\n    }\r\n    private _disabled = false;\r\n\r\n    onChange = (val: Array<string>) => {};\r\n    onTouched = () => {};\r\n\r\n    get error() {\r\n        return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n    }\r\n\r\n    constructor(@Optional() @Self() private ngControl: NgControl) {\r\n        if (ngControl) {\r\n            ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        for (const checkbox of this.checkboxes.toArray()) {\r\n            checkbox.disabled = this.disabled;\r\n            checkbox.inputElement.addEventListener('click', () => this.writeValue(''));\r\n        }\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (!this.checkboxes) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        const checkboxValues = [];\r\n        for (const checkbox of this.checkboxes.toArray()) {\r\n            if (checkbox.checked) {\r\n                checkboxValues.push(checkbox.value);\r\n            }\r\n        }\r\n\r\n        if (checkboxValues.length === 0) {\r\n            this.onChange(null);\r\n        }\r\n\r\n        this.onChange(checkboxValues);\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n\r\n    }\r\n}","import { AfterViewInit, Component, ElementRef, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'bmo-ng-checkbox',\n  template: `\n    <ng-container *ngIf=\"isChild\">\n        <div class=\"input-wrap input-checkbox\">\n          <input\n            type=\"checkbox\"\n            name=\"{{name}}\"\n            id=\"{{id}}\"\n            class=\"check\"\n            [value]=\"value\"\n            [checked]=\"checked\"\n            [attr.aria-checked]=\"checked\"\n            [disabled]=\"disabled\"\n            (click)=\"toggleChecked()\"\n            (keyup)=\"setLastState()\"\n          >\n          <label class=\"check-label active-label\" for=\"{{id}}\">{{label}}</label>\n        </div>\n    </ng-container>\n    <ng-container *ngIf=\"!isChild\">\n        <input\n        type=\"checkbox\"\n        name=\"{{name}}\"\n        id=\"{{id}}\"\n        class=\"check\"\n        [value]=\"value\"\n        [checked]=\"checked\"\n        [attr.aria-checked]=\"checked\"\n        [disabled]=\"disabled\"\n        (click)=\"toggleChecked()\"\n        (keyup)=\"setLastState()\"\n      >\n      <label class=\"check-label active-label\" for=\"{{id}}\">{{label}}</label>\n    </ng-container>\n  `\n})\nexport class BmoNgCheckboxComponent implements OnInit, AfterViewInit {\n\n  @Input() id: string;\n  @Input() label: string;\n  @Input() value: string;\n  @Input() name: string;\n\n  @Input() checked = false;\n  @Input() disabled = false;\n  @Input() isChild = false;\n\n  public lastState = false;\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    if (!this.id) {\n      const random = Math.round(Math.random() * 10000);\n      this.id = this.label.replace(/\\s+/g, '-').toLowerCase() + random;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.isChild) {\n      const oldParentElement = this.nativeElement.parentElement;\n\n      const listElement = document.createElement('li');\n      listElement.appendChild(this.nativeElement);\n\n      oldParentElement.appendChild(listElement);\n    }\n  }\n\n  toggleChecked() {\n    this.checked = !this.checked;\n\n    this.setLastState();\n  }\n\n  setChecked(val: boolean | string) {\n    if (typeof val === 'boolean') {\n      this.checked = val;\n    } else {\n      switch (val) {\n        case 'true':\n        case 'false':\n            this.checked = Boolean(val);\n            break;\n        case 'last':\n          this.checked = this.lastState || false;\n          break;\n        default:\n            break;\n      }\n    }\n  }\n\n  private setLastState() {\n    if (this.isChild) {\n      this.lastState = this.checked;\n    }\n  }\n\n  get nativeElement() {\n    return this.elementRef.nativeElement as HTMLElement;\n  }\n\n  get inputElement() {\n      return this.elementRef.nativeElement.firstElementChild as HTMLInputElement;\n  }\n\n}\n","import { AfterContentInit, AfterViewInit, Component, ContentChildren, Input, OnDestroy, Optional, QueryList, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-checkbox-wrap',\r\n    template: `\r\n        <div class=\"check-group\">\r\n            <fieldset class=\"input-wrap input-checkbox\" [disabled]=\"disabled\">\r\n                <legend class=\"legend check-legend\">{{label}}</legend>\r\n                <ng-content select=\"bmo-ng-checkbox\"></ng-content>\r\n                <span *ngIf=\"error\" class=\"error-message has-error\" role=\"alert\">{{errorMessage}}</span>\r\n            </fieldset>\r\n        </div>\r\n    `\r\n})\r\nexport class BmoNgCheckboxWrapComponent implements OnDestroy, AfterContentInit, AfterViewInit, ControlValueAccessor {\r\n    @ContentChildren(BmoNgCheckboxComponent) checkboxes: QueryList<BmoNgCheckboxComponent>;\r\n\r\n    @Input() label: string;\r\n    @Input() errorMessage: string;\r\n    @Input() name = 'checkbox-group-' + this.randomInterval(0, 1000);\r\n\r\n    // States\r\n    @Input() \r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(disabled: boolean) {\r\n        this._disabled = disabled;\r\n\r\n        if (this.checkboxes) {\r\n            for (const checkbox of this.checkboxes) {\r\n                checkbox.disabled = this.disabled;\r\n            }\r\n        }\r\n    }\r\n    private _disabled = false;\r\n\r\n    onChange = (val: Array<string>) => {};\r\n    onTouched = () => {};\r\n\r\n    get error(): boolean {\r\n        return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n    }\r\n\r\n    constructor(@Optional() @Self() private ngControl: NgControl) {\r\n        if (ngControl) {\r\n            ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit(): void {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.name = this.name;\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.inputElement.addEventListener('click', this._clickListener);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.inputElement.removeEventListener('click', this._clickListener);\r\n        }\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (!this.checkboxes) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        const checkboxValues = [];\r\n        for (const checkbox of this.checkboxes) {\r\n            if (checkbox.checked) {\r\n                checkboxValues.push(checkbox.value);\r\n            }\r\n        }\r\n\r\n        if (checkboxValues.length === 0) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        return this.onChange(checkboxValues);\r\n    }\r\n\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    private _clickListener = (event) => {\r\n        this.writeValue('');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private randomInterval(min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}","import { AfterContentInit, AfterViewInit, Component, ContentChildren, ElementRef, HostListener, Input, OnInit, Optional, QueryList, Self, ViewChild } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-parent-checkbox',\r\n    template: `\r\n        <div class=\"input-wrap input-checkbox parent-checkbox\">\r\n            <input #inputElement\r\n                type=\"checkbox\"\r\n                name=\"{{name}}\"\r\n                id=\"{{id}}\"\r\n                [checked]=\"checked\"\r\n                [disabled]=\"disabled\"\r\n                [attr.aria-checked]=\"ariaState\"\r\n                [attr.aria-controls]=\"childIds\"\r\n                (click)=\"onClick($event)\"\r\n                (keydown)=\"onKeyDown($event)\"\r\n            >\r\n            <label for=\"{{id}}\">{{label}}</label>\r\n        </div>\r\n        <ul class=\"checkboxes\">\r\n            <ng-content select=\"bmo-ng-checkbox\"></ng-content>\r\n        </ul>\r\n    `\r\n})\r\nexport class BmoNgParentCheckboxComponent implements AfterContentInit, AfterViewInit, OnInit, ControlValueAccessor {\r\n    @ContentChildren(BmoNgCheckboxComponent) checkboxes: QueryList<BmoNgCheckboxComponent>;\r\n    @ViewChild('inputElement') inputElement: ElementRef;\r\n\r\n    @Input() id: string;\r\n    @Input() label: string;\r\n    @Input() errorMessage: string;\r\n    @Input() name = 'parent-checkbox-group-' + this.randomInterval(0, 1000);\r\n\r\n    // States\r\n    @Input() get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(disabled: boolean) {\r\n        this._disabled = disabled;\r\n\r\n        if (this.checkboxes) {\r\n            for (const checkbox of this.checkboxes) {\r\n                checkbox.disabled = disabled;\r\n            }\r\n        }\r\n    }\r\n    private _disabled = false;\r\n    @Input() checked = false;\r\n\r\n    public childIds: string;\r\n    public ariaState: 'false' | 'true' | 'mixed' = 'false';\r\n\r\n    get error(): boolean {\r\n        return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\r\n    }\r\n\r\n    onChange = (val: Array<string>) => {};\r\n    onTouched = () => {};\r\n\r\n    constructor(@Optional() @Self() private ngControl: NgControl) {\r\n        if (ngControl) {\r\n            ngControl.valueAccessor = this;\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.id) {\r\n            this.id = this.name;\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        const childIds = [];\r\n\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.isChild = true;\r\n            checkbox.disabled = this.disabled;\r\n            checkbox.name = this.name;\r\n            childIds.push(checkbox.id);\r\n        }\r\n\r\n        this.childIds = childIds.join(' ');\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.disabled = this.disabled;\r\n\r\n            checkbox.inputElement.removeEventListener('click', this._onClick);\r\n            checkbox.inputElement.addEventListener('click', this._onClick);\r\n        }\r\n\r\n        this.updateParentCheckbox();\r\n    }\r\n\r\n    writeValue(obj: any): void {\r\n        if (!this.checkboxes) {\r\n            return this.onChange(null);\r\n        }\r\n\r\n        const checkboxValues = [];\r\n        for (const checkbox of this.checkboxes) {\r\n            if (checkbox.checked) {\r\n                checkboxValues.push(checkbox.value);\r\n            }\r\n        }\r\n\r\n        if (checkboxValues.length === 0) {\r\n            this.onChange(null);\r\n        }\r\n\r\n        this.onChange(checkboxValues);\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    public updateParentCheckbox() {\r\n        const count = this.checkboxes.reduce((acc, curr) => curr.checked ? acc + 1 : acc, 0);\r\n\r\n        switch (count) {\r\n            case 0:\r\n                this.setChecked('false');\r\n                break;\r\n            case this.checkboxes.length:\r\n                this.setChecked('true');\r\n                break;\r\n            default:\r\n                this.setChecked('mixed');\r\n                this.updateControlledStates();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public toggleParentCheckbox() {\r\n        switch (this.ariaState) {\r\n            case 'false':\r\n            case 'mixed':\r\n                this.setCheckboxes(true);\r\n                break;\r\n            case 'true':\r\n                this.setCheckboxes(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    private setChecked(state: 'false' | 'true' | 'mixed') {\r\n        this.ariaState = state;\r\n        this.inputElement.nativeElement.checked = this.checked = state === 'false' ? false : true;\r\n    }\r\n\r\n    private setCheckboxes(val: boolean) {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.setChecked(val);\r\n        }\r\n        this.updateParentCheckbox();\r\n    }\r\n\r\n    private updateControlledStates() {\r\n        for (const checkbox of this.checkboxes) {\r\n            checkbox.lastState = checkbox.checked;\r\n        }\r\n    }\r\n\r\n    private anyLastChecked() {\r\n        const count = this.checkboxes.reduce((acc, curr) => curr.lastState ? acc + 1 : acc, 0);\r\n        return count > 0;\r\n    }\r\n\r\n    _onClick = (event) => {\r\n        this.updateParentCheckbox();\r\n        this.writeValue('');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onClick(event: MouseEvent) {\r\n        this.toggleParentCheckbox();\r\n        this.writeValue('');\r\n        event.stopPropagation();\r\n    }\r\n\r\n    onKeyDown(event: KeyboardEvent) {\r\n        if (event.key === 'Space') {\r\n            this.toggleParentCheckbox();\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    private randomInterval(min: number, max: number): number {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BmoNgCardCheckboxComponent } from './bmo-ng-card-checkbox.component';\r\nimport { BmoNgCardCheckboxWrapComponent } from './bmo-ng-card-checkbox-wrap.component';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox.component';\r\nimport { BmoNgCheckboxWrapComponent } from './bmo-ng-checkbox-wrap.component';\r\nimport { BmoNgParentCheckboxComponent } from './bmo-ng-parent-checkbox.component';\r\n\r\nconst declarations = [\r\n    BmoNgCheckboxComponent,\r\n    BmoNgCardCheckboxComponent,\r\n    BmoNgCheckboxWrapComponent,\r\n    BmoNgParentCheckboxComponent,\r\n    BmoNgCardCheckboxWrapComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgCheckboxModule {}","import { Component, OnInit, Input, ViewChild, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-modal',\r\n  templateUrl: './bmo-ng-modal.component.html',\r\n  styleUrls: ['./bmo-ng-modal.component.scss']\r\n})\r\nexport class BmoNgModalComponent implements OnInit {\r\n  @Input() id = '';\r\n  @Input() title = '';\r\n  @Input() isDismissable = true;\r\n  @ViewChild('modal') modal: ElementRef;\r\n\r\n  private focusableElements: string;\r\n  private modalFocusableElements: string;\r\n\r\n  public isActive: boolean;\r\n  public closeCallback: Function;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.focusableElements = 'a[href]:not([disabled]), button:not([disabled]), textarea:not([disabled]), input[type=\"text\"]:not([disabled]), input[type=\"radio\"]:not([disabled]), input[type=\"checkbox\"]:not([disabled]), select:not([disabled]), label, li[role=\"tab\"]:not([disabled]), div[role=\"tabpanel\"]:not([disabled])';\r\n    this.modalFocusableElements = '.modal a[href]:not([disabled]), .modal button:not([disabled]), .modal textarea:not([disabled]), .modal input[type=\"text\"]:not([disabled]), .modal input[type=\"radio\"]:not([disabled]), .modal input[type=\"checkbox\"]:not([disabled]), .modal select:not([disabled]), .modal label, .modal li[role=\"tab\"]:not([disabled]), .modal div[role=\"tabpanel\"]:not([disabled])';\r\n  }\r\n\r\n  /**\r\n   * Close modal if the Escape key was pressed\r\n   *\r\n   * @param event Keyboard event that called this function\r\n   */\r\n  @HostListener('keyup', ['$event'])\r\n  private escapeCloseModal(event: KeyboardEvent) {\r\n\r\n    if (this.isDismissable && (event.key === 'Esc' || event.key === 'Escape')) {\r\n      this.closeModal();\r\n    }\r\n\r\n    event.preventDefault();\r\n  }\r\n\r\n  /**\r\n   * Displays the modal\r\n   */\r\n  displayModal() {\r\n    this.isActive = true;\r\n    this.removeTabIndexes(document.body, this.focusableElements);\r\n\r\n    setTimeout(() => {\r\n      this.modal.nativeElement.focus();\r\n      this.addTabIndexes(this.modal.nativeElement, this.modalFocusableElements);\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Closes the modal\r\n   */\r\n  closeModal() {\r\n    this.isActive = false;\r\n    this.addTabIndexes(document.body, this.focusableElements);\r\n    document.querySelectorAll('.bmo-switch').forEach((element) => element.setAttribute('tabindex', '0'));\r\n\r\n    if (this.closeCallback) {\r\n      this.closeCallback();\r\n    }\r\n  }\r\n\r\n  onBackgroundClick() {\r\n    if(!this.isDismissable)\r\n      return;\r\n\r\n    this.closeModal();\r\n  }\r\n\r\n  /**\r\n   * Sets all the tab indexes for the found elements to -1\r\n   *\r\n   * @param element Element that we will query from\r\n   */\r\n  private removeTabIndexes(element: HTMLElement, elementQuery: string) {\r\n    const elements = element.querySelectorAll(elementQuery);\r\n\r\n    if (!elements) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach((e: HTMLElement) => {\r\n      e.setAttribute('tabindex', '-1');\r\n    });\r\n  }\r\n\r\n  private addTabIndexes(element: HTMLElement, elementQuery: string) {\r\n    const elements = element.querySelectorAll(elementQuery);\r\n\r\n    if (!elements) {\r\n      return;\r\n    }\r\n\r\n    elements.forEach((e: HTMLElement) => {\r\n      e.removeAttribute('tabindex');\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, Input, AfterViewInit, AfterViewChecked } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bmo-ng-popover',\r\n  templateUrl: './bmo-ng-popover.component.html',\r\n  host: { '[class.popover-wrapper]': 'true'},\r\n  styleUrls: ['./bmo-ng-popover.component.scss']\r\n})\r\nexport class BmoNgPopoverComponent implements OnInit, AfterViewInit, AfterViewChecked {\r\n  @Input() icon = 'enclosed-help';\r\n  @Input() direction: 'top'|'left'|'right'|'bottom' = 'top';\r\n  @Input() title = '';\r\n  @Input() containerStyle;\r\n  @Input() buttonStyle;\r\n\r\n  @ViewChild('popoverButton') popoverButton: ElementRef;\r\n  @ViewChild('popoverContent') popoverContent: ElementRef;\r\n\r\n  public isActive: boolean;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // Fixes BMO Design System bug where margin for top popover isn't dynamic with the popover height\r\n    if (this.direction === 'top' && this.popoverContent) {\r\n      this.popoverContent.nativeElement.style.marginTop = -(this.popoverContent.nativeElement.clientHeight + 30) + 'px';\r\n    }\r\n  }\r\n\r\n  displayPopover() {\r\n    this.isActive = true;\r\n\r\n    setTimeout(() => {\r\n      this.popoverContent.nativeElement.focus();\r\n    }, 200);\r\n  }\r\n\r\n  closePopover() {\r\n    this.isActive = false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-popover-header',\r\n    template: '<ng-content></ng-content>',\r\n    host: {'[class.popover-header]': 'true'}\r\n})\r\nexport class BmoNgPopoverHeaderComponent {}\r\n","import { Component, ElementRef } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-popover-content',\r\n    template: '<ng-content></ng-content>',\r\n    host: {'[class.popover-content]': 'true'}\r\n})\r\nexport class BmoNgPopoverContentComponent {}\r\n","import { BmoNgPopoverComponent } from \"./bmo-ng-popover.component\";\r\nimport { BmoNgPopoverHeaderComponent } from './bmo-ng-popover-header.component';\r\nimport { BmoNgPopoverContentComponent } from './bmo-ng-popover-content.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nconst declarations = [\r\n    BmoNgPopoverComponent,\r\n    BmoNgPopoverHeaderComponent,\r\n    BmoNgPopoverContentComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgPopoverModule {}\r\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-radio-button',\r\n    template: `\r\n        <input type=\"radio\" [class.radio]=\"type === 'traditional'\" [class.box-radio]=\"type === 'box'\" name=\"{{name}}\" id=\"{{id}}\" value=\"{{value}}\" >\r\n        <label [class.radio-label]=\"type !== 'box'\" [class.box-radio-label]=\"type === 'box'\" for=\"{{id}}\">{{label}}</label>\r\n    `\r\n})\r\nexport class BmoNgRadioButtonComponent {\r\n    @Input() id: string;\r\n    @Input() value: string;\r\n    @Input() name: string;\r\n    @Input() type: 'traditional' | 'box' = 'traditional';\r\n    @Input() label = '';\r\n\r\n    // States\r\n    @Input() disabled = false;\r\n\r\n    constructor(private elementRef: ElementRef) {}\r\n\r\n    get inputElement(): HTMLInputElement {\r\n        return this.elementRef.nativeElement.firstElementChild as HTMLInputElement;\r\n    }\r\n}","import { AfterContentInit, Component, ContentChildren, HostBinding, Input, OnDestroy, OnInit, Optional, QueryList, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { BmoNgRadioButtonComponent } from './bmo-ng-radio-button.component';\n\n@Component({\n  selector: 'bmo-ng-radio-button-wrap',\n  templateUrl: './bmo-ng-radio-button-container.component.html',\n  styleUrls: ['./bmo-ng-radio-button-container.component.scss']\n})\nexport class BmoNgRadioButtonContainerComponent implements OnInit, OnDestroy, AfterContentInit, ControlValueAccessor {\n  @HostBinding('class.radio-group') radioGroupClass = true;\n  @ContentChildren(BmoNgRadioButtonComponent) radioButtons: QueryList<BmoNgRadioButtonComponent>;\n\n  private radioGroupNum = this.randomInterval(0, 1000);\n\n  @Input() legend: string;\n  @Input() type: 'traditional' | 'box' = 'traditional';\n  @Input() name = 'radio-group-' + this.radioGroupNum;\n  @Input() errorMessage: string;\n\n  // States\n  @Input() disabled = false;\n\n  get error(): boolean {\n    return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\n  }\n\n  onChange = (val: string) => {};\n  onTouched = () => {};\n\n  constructor(@Optional() @Self() private ngControl: NgControl) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngAfterContentInit(): void {\n    const radioButtons = this.radioButtons.toArray();\n\n    for (let i = 0; i < radioButtons.length; i++) {\n      const radioButton = radioButtons[i];\n      radioButton.name = this.name;\n      radioButton.type = this.type;\n      radioButton.disabled = this.disabled;\n\n      if (!radioButton.id) {\n        radioButton.id = 'radio-' + this.radioGroupNum + '-' + (i + 1);\n      }\n\n      if (!radioButton.value) {\n        radioButton.value = String(i);\n      }\n\n      radioButton.inputElement.addEventListener('click', this._clickListener);\n    }\n  }\n\n  ngOnDestroy() {\n    for (const radioButton of this.radioButtons) {\n      radioButton.inputElement.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  writeValue(obj: any): void {\n    if (!this.radioButtons) {\n      this.onChange(obj);\n      return;\n    }\n\n    for (const radioButton of this.radioButtons.toArray()) {\n      if (radioButton.inputElement.checked) {\n        this.onChange(radioButton.value);\n        return;\n      }\n    }\n\n    this.onChange(obj);\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  private _clickListener = (event) => {\n    this.writeValue('');\n    event.stopPropagation();\n  }\n  private randomInterval(min: number, max: number): number {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BmoNgRadioButtonComponent } from './bmo-ng-radio-button.component';\r\nimport { BmoNgRadioButtonContainerComponent } from './bmo-ng-radio-button-container.component';\r\n\r\nconst declarations = [\r\n    BmoNgRadioButtonComponent,\r\n    BmoNgRadioButtonContainerComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgRadioButtonModule {}","import { AfterViewInit, Component, ElementRef, forwardRef, Input, OnInit, Optional, Self, ViewChild } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, NgControl, NG_VALIDATORS, NG_VALUE_ACCESSOR, ValidationErrors, Validator } from '@angular/forms';\n\n@Component({\n  selector: 'bmo-ng-select',\n  templateUrl: './bmo-ng-select.component.html',\n  styleUrls: ['./bmo-ng-select.component.scss']\n})\nexport class BmoNgSelectComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n  @ViewChild('selectElement') selectElement: ElementRef;\n\n  @Input() label = '';\n  @Input() helperText = '';\n  @Input() errorMessage = '';\n  @Input() autofocus = false;\n\n  // States\n  @Input() disabled = false;\n  @Input() readonly = false;\n  @Input() mercury = false;\n\n  public labelId: string;\n  public value: string;\n\n  onChange = (val: string) => {};\n  onTouched = () => {};\n  onValidatorChange = () => {};\n\n  get error(): boolean {\n    return this.ngControl ? (this.ngControl.invalid && this.ngControl.dirty) : false;\n  }\n\n  constructor(@Optional() @Self() private ngControl: NgControl) {\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n    this.labelId = this.label.replace(/\\s+/g, '-').toLowerCase();\n  }\n\n  ngAfterViewInit(): void {\n    if (this.autofocus) {\n      this.selectElement.nativeElement.focus();\n    }\n  }\n\n  writeValue(val: string): void {\n    this.value = val;\n    this.onChange(val);\n  }\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n}\n","import { Component, HostBinding, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-tab-panel',\r\n    template: `\r\n        <div class=\"panel-content\">\r\n            <ng-content></ng-content>\r\n        </div>\r\n    `\r\n})\r\nexport class BmoNgTabPanelComponent {\r\n    @Input() set active(val: boolean) {\r\n        this.ariaHiddenAttribute = !val;\r\n        this.activeTabContentClass = val;\r\n    }\r\n\r\n    @HostBinding('class.tab-panel') tabPanelClass = true;\r\n    @HostBinding('attr.id') id = 'tab-' + this.tabId;\r\n    @HostBinding('attr.role') roleAttribute = 'tabpanel';\r\n    @HostBinding('attr.aria-describedby') ariaDescribedByAttribute = 'tab-' + this.tabId;\r\n    @HostBinding('class.active-tab-content') activeTabContentClass = false;\r\n    @HostBinding('attr.aria-hidden') ariaHiddenAttribute = true;\r\n\r\n    get tabId(): number {\r\n        return this._tabId;\r\n    }\r\n    set tabId(val: number) {\r\n        this.id = 'tab-' + val + '-panel';\r\n        this.ariaDescribedByAttribute = 'tab-' + val;\r\n        this._tabId = val;\r\n    }\r\n    private _tabId: number;\r\n\r\n    displayTabPanel(): void {\r\n        this.active = true;\r\n    }\r\n\r\n    hideTabPanel(): void {\r\n        this.active = false;\r\n    }\r\n}","import { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-tab',\r\n    template: `\r\n        {{label}}\r\n        <span class=\"tab-indicator\"></span>\r\n    `\r\n})\r\nexport class BmoNgTabComponent {\r\n    @Input() label = \"\";\r\n    @Input() set active(val: boolean) {\r\n        this.tabIndex = val ? 0 : -1;\r\n        this.activeTabLabelClass = this.ariaSelectedAttribute = val;\r\n    }\r\n\r\n    @HostBinding('attr.id') id = 'tab-' + this.tabId;\r\n    @HostBinding('attr.role') roleAttribute = 'tab';\r\n    @HostBinding('attr.tabindex') tabIndex = -1;\r\n    @HostBinding('attr.aria-selected') ariaSelectedAttribute = false;\r\n    @HostBinding('class.tab') tabClass = true;\r\n    @HostBinding('class.active-tab-label') activeTabLabelClass = false;\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    private navigateTabs(event: KeyboardEvent) {\r\n        switch (event.key) {\r\n            case 'Left':\r\n            case 'ArrowLeft':\r\n                this.elementRef.nativeElement.previousElementSibling?.focus();\r\n                break;\r\n            case 'Right':\r\n            case 'ArrowRight':\r\n                this.elementRef.nativeElement.nextElementSibling?.focus();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    get tabId(): number {\r\n        return this._tabId;\r\n    }\r\n    set tabId(val: number) {\r\n        this.id = 'tab-' + val;\r\n        this._tabId = val;\r\n    }\r\n    private _tabId: number;\r\n\r\n    constructor(public elementRef: ElementRef) {\r\n        this.tabId = 0;\r\n    }\r\n\r\n    selectTab(): void {\r\n        this.active = true;\r\n    }\r\n\r\n    deselectTab(): void {\r\n        this.active = false;\r\n    }\r\n}","import { AfterContentInit, Component, ContentChildren, ElementRef, HostBinding, QueryList } from '@angular/core';\r\nimport { BmoNgTabPanelComponent } from './bmo-ng-tab-panel.component';\r\nimport { BmoNgTabComponent } from './bmo-ng-tab.component';\r\n\r\n@Component({\r\n    selector: 'bmo-ng-tab-list',\r\n    template: `\r\n        <ul class=\"tab-list\" role=\"tablist\" aria-label=\"Use right and left arrows to navigate between tabs\">\r\n            <ng-content select=\"bmo-ng-tab\"></ng-content>\r\n            <span class=\"tablist-guideline\" aria-hidden=\"true\"></span>\r\n        </ul>\r\n        <ng-content select=\"bmo-ng-tab-panel\"></ng-content>\r\n    `\r\n})\r\nexport class BmoNgTabListComponent implements AfterContentInit {\r\n    @HostBinding('class.bmo-tabs-wrap') tabsWrapClass = true;\r\n\r\n    @ContentChildren(BmoNgTabComponent) dslTabs: QueryList<BmoNgTabComponent>;\r\n    @ContentChildren(BmoNgTabPanelComponent) dslPanels: QueryList<BmoNgTabPanelComponent>;\r\n\r\n    private selectedTabIndex: number;\r\n\r\n    constructor(private elementRef: ElementRef) {}\r\n\r\n    ngAfterContentInit() {\r\n        if (this.dslTabs.length !== this.dslPanels.length) {\r\n            console.error('ERROR: Tab element count does not equal tab panel count. Aborting.');\r\n            return;\r\n        }\r\n\r\n        const dslTabsArray = this.dslTabs.toArray();\r\n        const dslPanelsArray = this.dslPanels.toArray();\r\n\r\n        for (let i = 0; i < this.dslTabs.length; i++) {\r\n            const tab = dslTabsArray[i];\r\n            const tabPanel = dslPanelsArray[i];\r\n            tab.tabId = tabPanel.tabId = i;\r\n\r\n            tab.elementRef.nativeElement.addEventListener('click', _ => this.selectTab(i));\r\n            tab.elementRef.nativeElement.addEventListener('keyup', (event) => {\r\n                if (event.key === 'Down' || event.key === 'ArrowDown' || event.key === 'Enter') {\r\n                    this.selectTab(i);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    selectTab(tabId: number) {\r\n        if (this.selectedTabIndex === tabId) {\r\n            return;\r\n        }\r\n\r\n        const dslTabsArray = this.dslTabs.toArray();\r\n        const dslPanelsArray = this.dslPanels.toArray();\r\n\r\n        for (let i = 0; i < this.dslTabs.length; i++) {\r\n            const tab = dslTabsArray[i];\r\n            const tabPanel = dslPanelsArray[i];\r\n\r\n            if (tab.tabId === tabId) {\r\n                tab.selectTab();\r\n                tabPanel.displayTabPanel();\r\n            } else {\r\n                tab.deselectTab();\r\n                tabPanel.hideTabPanel();\r\n            }\r\n        }\r\n\r\n        this.selectedTabIndex = tabId;\r\n\r\n        this.scrollTabsIfNeeded(tabId);\r\n    }\r\n\r\n    private scrollTabsIfNeeded(tabId: number) {\r\n        const tab = this.dslTabs.toArray()[tabId];\r\n\r\n        const tabOffsetLeft = tab.elementRef.nativeElement.offsetLeft;\r\n        const tabOffsetWidth = tab.elementRef.nativeElement.offsetWidth;\r\n        const tabWrapOffsetWidth = this.elementRef.nativeElement.offsetWidth;\r\n        const amountForTabsToMove = tabOffsetLeft - Math.abs(tabWrapOffsetWidth - tabOffsetWidth) / 2;\r\n\r\n        this.elementRef.nativeElement.scrollLeft = amountForTabsToMove;\r\n    }\r\n}","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BmoNgTabListComponent } from './bmo-ng-tab-list.component';\r\nimport { BmoNgTabPanelComponent } from './bmo-ng-tab-panel.component';\r\nimport { BmoNgTabComponent } from './bmo-ng-tab.component';\r\n\r\nconst declarations = [\r\n    BmoNgTabListComponent,\r\n    BmoNgTabPanelComponent,\r\n    BmoNgTabComponent\r\n];\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [...declarations],\r\n    exports: [...declarations]\r\n})\r\nexport class BmoNgTabsModule {}\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { BmoNgRadioButtonModule } from './bmo-ng-radio-button/bmo-ng-radio-button.module';\r\nimport { BmoNgAccordionComponent } from './bmo-ng-accordion/bmo-ng-accordion.component';\r\nimport { BmoNgCheckboxComponent } from './bmo-ng-checkbox/bmo-ng-checkbox.component';\r\nimport { BmoNgCheckboxModule } from './bmo-ng-checkbox/bmo-ng-checkbox.module';\r\nimport { BmoNgModalComponent } from './bmo-ng-modal/bmo-ng-modal.component';\r\nimport { BmoNgPopoverModule } from './bmo-ng-popover/bmo-ng-popover.module';\r\nimport { BmoNgSelectComponent } from './bmo-ng-select/bmo-ng-select.component';\r\nimport { BmoNgTabsModule } from './bmo-ng-tabs/bmo-ng-tabs.module';\r\nimport { BmoNgTextFieldComponent } from './bmo-ng-text-field/bmo-ng-text-field.component';\r\n\r\n@NgModule({\r\n  declarations: [BmoNgModalComponent, BmoNgAccordionComponent, BmoNgTextFieldComponent, BmoNgSelectComponent],\r\n  exports: [\r\n    BmoNgModalComponent,\r\n    BmoNgTextFieldComponent,\r\n    BmoNgPopoverModule,\r\n    BmoNgAccordionComponent,\r\n    BmoNgSelectComponent,\r\n    BmoNgCheckboxModule,\r\n    BmoNgRadioButtonModule,\r\n    BmoNgTabsModule\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BmoNgPopoverModule,\r\n    BmoNgCheckboxModule,\r\n    BmoNgTabsModule,\r\n    BmoNgRadioButtonModule\r\n  ],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA\r\n  ]\r\n})\r\nexport class BmoDesignSystemModule { }\r\n","/*\n * Public API Surface of bmo-ds-angular-components\n */\n\nexport * from './lib/bmo-design-system/bmo-ng-text-field/bmo-ng-text-field.component';\nexport * from './lib/bmo-design-system/bmo-ng-accordion/bmo-ng-accordion.component';\nexport * from './lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox.module';\nexport * from './lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-card-checkbox-wrap.component';\nexport * from './lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-card-checkbox.component';\nexport * from './lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox-wrap.component';\nexport * from './lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-checkbox.component';\nexport * from './lib/bmo-design-system/bmo-ng-checkbox/bmo-ng-parent-checkbox.component';\nexport * from './lib/bmo-design-system/bmo-ng-modal/bmo-ng-modal.component';\nexport * from './lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover.module';\nexport * from './lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover-content.component';\nexport * from './lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover-header.component';\nexport * from './lib/bmo-design-system/bmo-ng-popover/bmo-ng-popover.component';\nexport * from './lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button.module';\nexport * from './lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button-container.component';\nexport * from './lib/bmo-design-system/bmo-ng-radio-button/bmo-ng-radio-button.component';\nexport * from './lib/bmo-design-system/bmo-ng-select/bmo-ng-select.component';\nexport * from './lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tabs.module';\nexport * from './lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab.component';\nexport * from './lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab-list.component';\nexport * from './lib/bmo-design-system/bmo-ng-tabs/bmo-ng-tab-panel.component';\nexport * from './lib/bmo-design-system/bmo-design-system.module';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["declarations"],"mappings":"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"}